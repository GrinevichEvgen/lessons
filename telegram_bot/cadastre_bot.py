import telebot
from bs4 import BeautifulSoup
import requests

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞, –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –æ—Ç BotFather
TOKEN = '—Ç–æ–∫–µ–Ω'

bot = telebot.TeleBot(TOKEN)


@bot.message_handler(commands=['start'])
def start(message):
    welcome_message = f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –í–∞—Å, {message.from_user.first_name}! –Ø –º–æ–≥—É –ø—Ä–æ–±–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ –∫–∞–¥–∞—Å—Ç—Ä–æ–≤–æ–º—É " \
                      f"–Ω–æ–º–µ—Ä—É. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å.\n\nP.S –Ø –±–µ—Ä—É –¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—Ö–æ–∂—É –≤ —Å–µ—Ç–∏! üòâ "
    markup = telebot.types.InlineKeyboardMarkup()
    button_start = telebot.types.InlineKeyboardButton("üü°–ù–∞—á–∞—Ç—å", callback_data='start')
    markup.add(button_start)
    bot.send_message(message.chat.id, welcome_message, reply_markup=markup)


@bot.callback_query_handler(func=lambda call: call.data == 'start')
def handle_start(call):
    bot.delete_message(call.message.chat.id, call.message.message_id)
    bot.send_message(call.message.chat.id, "ü§ñ: –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–∞–¥–∞—Å—Ç—Ä–æ–≤—ã–π –Ω–æ–º–µ—Ä!")


@bot.message_handler(func=lambda message: True)
def handle_message(message):
    if message.text.startswith(' ') or not message.text.replace('-', '').replace(':', '').isdigit():
        bot.reply_to(message, "‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∫–∞–¥–∞—Å—Ç—Ä–æ–≤—ã–π –Ω–æ–º–µ—Ä (–Ω–∞–ø—Ä–∏–º–µ—Ä, 69:45:0080243:2).")
        return

    kad_number = message.text.strip().replace(':', '-')

    url = f"https://nca.by/services/resources-services/publichnaya-kadastrovaya-karta/{kad_number}"

    try:

        response = requests.get(url)

        if response.status_code == 200:

            property_info = parse_property_info(response.content)

            if property_info:
                bot.reply_to(message, format_property_info(property_info), parse_mode='HTML')
            else:
                bot.reply_to(message, "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏.")
        else:
            bot.reply_to(message, "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏.")
    except Exception as e:
        bot.reply_to(message, f"‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")

    markup = telebot.types.InlineKeyboardMarkup()
    button_developer = telebot.types.InlineKeyboardButton("–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –±–æ—Ç–∞", url="https://t.me/pizzaway")
    markup.add(button_developer)
    bot.send_message(message.chat.id, "üë®‚Äçüíª –°–≤—è–∑–∞—Ç—å—Å—è —Å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º", reply_markup=markup)


def parse_property_info(html_content):
    soup = BeautifulSoup(html_content, 'html.parser')
    property_info = {}
    property_sections = soup.find_all('div', class_='object__table-tr')
    for section in property_sections:
        key_element = section.find('div', class_='object__table-td')
        value_element = section.find('div', class_='object__table-td').find_next('div')
        if key_element and value_element:
            key = key_element.text.strip()
            value = value_element.text.strip()
            property_info[key] = value
    return property_info


def format_property_info(property_info):
    formatted_info = "<b>–°–≤–µ–¥–µ–Ω–∏—è –ø–æ –æ–±—ä–µ–∫—Ç—É:</b>\n\n"
    for key, value in property_info.items():
        if key != '–ê—Ä–µ—Å—Ç –∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:' and key != '–ù–∞–ª–∏—á–∏–µ –∑–∞–ª–æ–≥–∞ –≤ –±–∞–Ω–∫–µ:' and key != '–û—Å–æ–±—ã–µ –æ—Ç–º–µ—Ç–∫–∏:':
            formatted_info += f"<b>{key}:</b> {value}\n\n"
    return formatted_info


bot.polling()
